head	1.7;
access;
symbols;
locks;
comment	@ * @;


1.7
date	2014.03.11.04.05.17;	author -;	state -;
branches;
next	1.6;

1.6
date	2014.03.11.04.02.04;	author -;	state -;
branches;
next	1.5;

1.5
date	2014.03.11.04.01.03;	author -;	state -;
branches;
next	1.4;

1.4
date	2014.03.11.04.00.23;	author -;	state -;
branches;
next	1.3;

1.3
date	2014.03.11.03.59.33;	author -;	state -;
branches;
next	1.2;

1.2
date	2014.03.11.03.58.48;	author -;	state -;
branches;
next	1.1;

1.1
date	2014.03.11.03.53.38;	author -;	state -;
branches;
next	;


desc
@@


1.7
log
@-
@
text
@#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <errno.h>
#include "inssort.h"

void print(char** sentence, int size){
  for(int i = 0; i < size; i++) {
    printf("%s\n", sentence[i]);
    free(sentence[i]);
  }
}

int strstrcmp (const void *this, const void *that) {
  char **thisstr = (char**) this;
  char **thatstr = (char**) that;
  return strcmp (*thisstr, *thatstr);
}

int main(void) {
  char buffer[1000];
  char *point[1000];
  int count = 0;
  for(;;){
    int in = scanf("%s", buffer); 
    if (in == EOF || count > 1000) break;
    else{
      point[count] = strdup(buffer);
      count++;
      //if(point[count] == '\0') point[count] = '\n';
    }
  }
  inssort (point, count, sizeof *point, strstrcmp);
  //qsort(point, count, sizeof *point, strstrcmp);
  print(point, count);
  return EXIT_SUCCESS;
}
@


1.6
log
@-
@
text
@d25 1
a25 1
    int in = scanf("%[^\n]", buffer); 
@


1.5
log
@-
@
text
@d25 1
a25 1
    int in = scanf("[^\n]", buffer); 
@


1.4
log
@-
@
text
@d25 1
a25 1
    int in = scanf("^\n", buffer); 
@


1.3
log
@-
@
text
@d25 1
a25 1
    int in = scanf("%\n", buffer); 
@


1.2
log
@-
@
text
@d25 1
a25 1
    int in = scanf("\n", buffer); 
@


1.1
log
@-
@
text
@d25 1
a25 1
    int in = scanf("%s", buffer); 
@
