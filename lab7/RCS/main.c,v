head	1.17;
access;
symbols;
locks;
comment	@ * @;


1.17
date	2014.02.28.04.29.01;	author -;	state -;
branches;
next	1.16;

1.16
date	2014.02.28.04.27.42;	author -;	state -;
branches;
next	1.15;

1.15
date	2014.02.28.04.27.09;	author -;	state -;
branches;
next	1.14;

1.14
date	2014.02.28.04.26.38;	author -;	state -;
branches;
next	1.13;

1.13
date	2014.02.28.04.23.50;	author -;	state -;
branches;
next	1.12;

1.12
date	2014.02.28.04.23.27;	author -;	state -;
branches;
next	1.11;

1.11
date	2014.02.28.04.16.36;	author -;	state -;
branches;
next	1.10;

1.10
date	2014.02.28.04.15.53;	author -;	state -;
branches;
next	1.9;

1.9
date	2014.02.28.04.14.56;	author -;	state -;
branches;
next	1.8;

1.8
date	2014.02.28.04.13.05;	author -;	state -;
branches;
next	1.7;

1.7
date	2014.02.28.04.11.36;	author -;	state -;
branches;
next	1.6;

1.6
date	2014.02.28.04.11.14;	author -;	state -;
branches;
next	1.5;

1.5
date	2014.02.28.04.10.45;	author -;	state -;
branches;
next	1.4;

1.4
date	2014.02.28.04.10.20;	author -;	state -;
branches;
next	1.3;

1.3
date	2014.02.28.04.08.34;	author -;	state -;
branches;
next	1.2;

1.2
date	2014.02.28.04.05.32;	author -;	state -;
branches;
next	1.1;

1.1
date	2014.02.26.20.19.29;	author -;	state -;
branches;
next	;


desc
@@


1.17
log
@-
@
text
@// $Id: main.c,v 1.16 2014-02-27 20:27:42-08 - - $

#include <assert.h>
#include <errno.h>
#include <libgen.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#include "queue.h"

char *execname = NULL;
int exit_status = EXIT_SUCCESS;

void putinqueue (queue *the_queue, FILE *input, char *filename) {
   char buffer[1024];
   for (int linenr = 1; ; ++linenr) {
      char *linepos = fgets (buffer, sizeof buffer, input);
      if (linepos == NULL) break;
      linepos = strchr (buffer, '\n');
      if (linepos == NULL) {
         fflush (NULL);
         fprintf (stderr, "%s: %s[%d]: unterminated line\n",
                  execname, filename, linenr);
         fflush (NULL);
         exit_status = EXIT_FAILURE;
      }else {
         *linepos = '\0';
      }
      linepos = strdup (buffer);
      assert (linepos != NULL);
      insert_queue (the_queue, linepos);
   }
}

void putfileinqueue (queue *the_queue, char *filename) {
   FILE *input = fopen (filename, "r");
   if (input == NULL) {
      fflush (NULL);
      fprintf (stderr, "%s: %s: %s\n",
               execname, filename, strerror (errno));
      fflush (NULL);
      exit_status = EXIT_FAILURE;
   }else {
      putinqueue (the_queue, input, filename);
      fclose (input);
   }
}


int main (int argc, char **argv) {
   execname = basename (argv[0]);
   queue *the_queue = new_queue();

   if (argc < 2) {
      putinqueue (the_queue, stdin, "-");
   }else {
      for (int argi = 1; argi < argc; ++argi) {
         if (strcmp (argv[argi], "-") == 0) {
            putinqueue (the_queue, stdin, "-");
         }else {
            putfileinqueue (the_queue, argv[argi]);
         }
      }
   }

   while (! isempty_queue (the_queue)) {
      char *string = remove_queue (the_queue);
      printf ("%s\n", string);
      free(string);
   }
   free_queue(the_queue);

   return exit_status;
}
@


1.16
log
@-
@
text
@d1 1
a1 1
// $Id: main.c,v 1.15 2014-02-27 20:27:09-08 - - $
d68 1
a68 1
     char *string = remove_queue (the_queue);
@


1.15
log
@-
@
text
@d1 1
a1 1
// $Id: main.c,v 1.14 2014-02-27 20:26:38-08 - - $
d68 1
a68 1
     char *string = remove_queue (the_queue));
@


1.14
log
@-
@
text
@d1 1
a1 1
// $Id: main.c,v 1.13 2014-02-27 20:23:50-08 - - $
d68 1
a68 1
     char *string = removre_queue (the_queue));
@


1.13
log
@-
@
text
@d1 1
a1 1
// $Id: main.c,v 1.12 2014-02-27 20:23:27-08 - - $
d68 3
a70 2
      printf ("%s\n", remove_queue (the_queue));
      free(the_queue);
@


1.12
log
@-
@
text
@d1 1
a1 1
// $Id: main.c,v 1.11 2014-02-27 20:16:36-08 - - $
d69 1
a69 1
      free(the_queue.item);
@


1.11
log
@-
@
text
@d1 1
a1 1
// $Id: main.c,v 1.10 2014-02-27 20:15:53-08 - - $
d69 1
a69 1
      free(the_queue.front.item);
@


1.10
log
@-
@
text
@d1 1
a1 1
// $Id: main.c,v 1.9 2014-02-27 20:14:56-08 - - $
d69 1
a69 1
      free_queue(the_queue.front.item);
@


1.9
log
@-
@
text
@d1 1
a1 1
// $Id: main.c,v 1.8 2014-02-27 20:13:05-08 - - $
d69 1
a69 1
      free(the_queue.queue_item_t.item);
@


1.8
log
@-
@
text
@d1 1
a1 1
// $Id: main.c,v 1.7 2014-02-27 20:11:36-08 - - $
d69 1
a69 1
      free(the_queue.queue_node.item);
@


1.7
log
@-
@
text
@d1 1
a1 1
// $Id: main.c,v 1.6 2014-02-27 20:11:14-08 - - $
d69 1
a69 1
      free_queue(the_queue);
@


1.6
log
@-
@
text
@d1 1
a1 1
// $Id: main.c,v 1.5 2014-02-27 20:10:45-08 - - $
d69 1
a69 1
      free_queue(the_queue.front.item);
@


1.5
log
@-
@
text
@d1 1
a1 1
// $Id: main.c,v 1.4 2014-02-27 20:10:20-08 - - $
d69 1
a69 1
      free(the_queue.front.item);
@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: main.c,v 1.3 2014-02-27 20:08:34-08 - - $
d69 1
a69 1
      free(the_queue.item);
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: main.c,v 1.2 2014-02-27 20:05:32-08 - - $
d69 1
a69 1
      free_queue(the_queue.item);
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: main.c,v 1.1 2014-02-26 12:19:29-08 - - $
d69 1
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id: main.c,v 1.10 2013-02-15 17:17:42-08 - - $
d70 1
@
