Script started on Sun 09 Feb 2014 05:24:29 PM PST
[?1034hbash-1$ mk list2.c
CSOURCE=list2.c EXECBIN=list2
+ cid + list2.c
+ checksource list2.c
+ gcc -g -O0 -Wall -Wextra -std=gnu99 list2.c -o list2 -lm
+ set +x
============================================================
bash-2$ mk list2.c[C[C[C[C[C[C[C[C[Kvla[K[Kalgrind list2 foo bar
==14991== Memcheck, a memory error detector
==14991== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==14991== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==14991== Command: list2 foo bar
==14991== 
0x4c280e0->node {word=0x7ff000109->[bar], link=0x4c28090}
0x4c28090->node {word=0x7ff000105->[foo], link=0x4c28040}
==14991== Conditional jump or move depends on uninitialised value(s)
==14991==    at 0x400684: main (list2.c:22)
==14991== 
==14991== 
==14991== HEAP SUMMARY:
==14991==     in use at exit: 48 bytes in 3 blocks
==14991==   total heap usage: 3 allocs, 0 frees, 48 bytes allocated
==14991== 
==14991== LEAK SUMMARY:
==14991==    definitely lost: 16 bytes in 1 blocks
==14991==    indirectly lost: 32 bytes in 2 blocks
==14991==      possibly lost: 0 bytes in 0 blocks
==14991==    still reachable: 0 bytes in 0 blocks
==14991==         suppressed: 0 bytes in 0 blocks
==14991== Rerun with --leak-check=full to see details of leaked memory
==14991== 
==14991== For counts of detected and suppressed errors, rerun with: -v
==14991== Use --track-origins=yes to see where uninitialised values come from
==14991== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 6 from 6)
bash-3$ gdb list3[K2
[?1034hGNU gdb (GDB) Red Hat Enterprise Linux (7.6-34.el6)
Copyright (C) 2013 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-redhat-linux-gnu".
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>...
Reading symbols from /afs/cats.ucsc.edu/users/u/brlgomez/private/cmps012m/lab5/list2...done.
(gdb) run foo bar
Starting program: /afs/cats.ucsc.edu/users/u/brlgomez/private/cmps012m/lab5/list2 foo bar
warning: the debug information found in "/usr/lib/debug//lib64/ld-2.12.so.debug" does not match "/lib64/ld-linux-x86-64.so.2" (CRC mismatch).

warning: the debug information found in "/usr/lib/debug/lib64/ld-2.12.so.debug" does not match "/lib64/ld-linux-x86-64.so.2" (CRC mismatch).

warning: the debug information found in "/usr/lib/debug//lib64/libm-2.12.so.debug" does not match "/lib64/libm.so.6" (CRC mismatch).

warning: the debug information found in "/usr/lib/debug/lib64/libm-2.12.so.debug" does not match "/lib64/libm.so.6" (CRC mismatch).

warning: the debug information found in "/usr/lib/debug//lib64/libc-2.12.so.debug" does not match "/lib64/libc.so.6" (CRC mismatch).

warning: the debug information found in "/usr/lib/debug/lib64/libc-2.12.so.debug" does not match "/lib64/libc.so.6" (CRC mismatch).

0x601050->node {word=0x7fffffffe184->[bar], link=0x601030}
0x601030->node {word=0x7fffffffe180->[foo], link=0x601010}
[Inferior 1 (process 15050) exited with code 011]
Missing separate debuginfos, use: debuginfo-install glibc-2.12-1.107.el6_4.5.x86_64
(gdb) where
No stack.
(gdb) list
6	
7	typedef struct node node;
8	struct node {
9	   char *word;
10	   node *link;
11	};
12	
13	int main (int argc, char **argv) {
14	   node *head;
15	   for (int argi = 0; argi < argc; ++argi) {
(gdb) list list2.c:23
18	      node->word = argv[argi];
19	      node->link = head;
20	      head = node;
21	   }
22	   for (node *curr = head; curr->link != NULL; curr = curr->link) {
23	      printf ("%p->node {word=%p->[%s], link=%p}\n",
24	              curr, curr->word, curr->word, curr->link);
25	   }
26	   return 9;
27	}
(gdb) print head
No symbol "head" in current context.
(gdb) bt
No stack.
(gdb) up
No stack.
(gdb) up
No stack.
(gdb) up
No stack.
(gdb) priny[Kt head
No symbol "head" in current context.
(gdb) print *head
No symbol "head" in current context.
(gdb) print *(head->word)
No symbol "head" in current context.
(gdb) print head->link->link->link
No symbol "head" in current context.
(gdb) print *(head->link->link->link)
No symbol "head" in current context.
(gdb) quit
bash-4$ w[Kexit
exit

Script done on Sun 09 Feb 2014 05:27:33 PM PST
