head	1.18;
access;
symbols;
locks;
comment	@ * @;


1.18
date	2014.02.19.04.50.04;	author -;	state -;
branches;
next	1.17;

1.17
date	2014.02.19.04.49.36;	author -;	state -;
branches;
next	1.16;

1.16
date	2014.02.19.04.49.02;	author -;	state -;
branches;
next	1.15;

1.15
date	2014.02.19.04.48.39;	author -;	state -;
branches;
next	1.14;

1.14
date	2014.02.19.04.40.39;	author -;	state -;
branches;
next	1.13;

1.13
date	2014.02.19.04.39.36;	author -;	state -;
branches;
next	1.12;

1.12
date	2014.02.19.04.33.29;	author -;	state -;
branches;
next	1.11;

1.11
date	2014.02.19.04.32.58;	author -;	state -;
branches;
next	1.10;

1.10
date	2014.02.19.04.29.12;	author -;	state -;
branches;
next	1.9;

1.9
date	2014.02.19.04.28.32;	author -;	state -;
branches;
next	1.8;

1.8
date	2014.02.19.04.25.53;	author -;	state -;
branches;
next	1.7;

1.7
date	2014.02.19.04.25.16;	author -;	state -;
branches;
next	1.6;

1.6
date	2014.02.19.04.24.40;	author -;	state -;
branches;
next	1.5;

1.5
date	2014.02.19.04.23.46;	author -;	state -;
branches;
next	1.4;

1.4
date	2014.02.19.04.23.25;	author -;	state -;
branches;
next	1.3;

1.3
date	2014.02.19.04.23.06;	author -;	state -;
branches;
next	1.2;

1.2
date	2014.02.19.04.21.25;	author -;	state -;
branches;
next	1.1;

1.1
date	2014.02.19.04.19.50;	author -;	state -;
branches;
next	;


desc
@@


1.18
log
@-
@
text
@#include <stdio.h>
#include <stdlib.h>

extern char **environ;
int main(){
  for(int argi = 1; ; argi++){
    if(environ[argi] == NULL){
      return 0;
    }
    printf("%s", environ[argi]);
  }
  return 1;
}
@


1.17
log
@-
@
text
@d6 1
a6 1
  for(int argi = 1; argi < argc; argi++){
@


1.16
log
@-
@
text
@d5 1
a5 1
int main(int argc){
d7 1
a7 1
    if(environ[argc] == NULL){
d10 1
a10 1
    printf("%s", environ[argc]);
@


1.15
log
@-
@
text
@d5 1
a5 1
int main(int argc, char **argv){
@


1.14
log
@-
@
text
@a5 1
  //extern char **environ;
d7 1
a7 1
    if(argv[argi] == NULL){
d10 1
a10 2
    environ += *argv[argi];
    printf("%s", *environ);
@


1.13
log
@-
@
text
@d4 1
d6 1
a6 1
  extern char **environ;
@


1.12
log
@-
@
text
@d10 1
a10 1
    environ += argv[argi];
@


1.11
log
@-
@
text
@d10 1
a10 1
    environ = argv[argi];
@


1.10
log
@-
@
text
@d11 1
a11 1
    printf("%s%s", environ);
@


1.9
log
@-
@
text
@d11 1
a11 1
    printf("%s", environ);
@


1.8
log
@-
@
text
@d5 1
d10 2
a11 1
    printf("%s", argv[argi]);
@


1.7
log
@-
@
text
@d9 1
a9 1
    printf("%s", agri);
@


1.6
log
@-
@
text
@d9 1
a9 1
    printf("%s", argv[agri]);
@


1.5
log
@-
@
text
@d5 1
a5 1
  for(int argi = 0; argi < argc; argi++){
@


1.4
log
@-
@
text
@d9 1
a9 1
    printf("%s", argv[agrc]);
@


1.3
log
@-
@
text
@d5 1
a5 1
  for(int argi = 0; argi < argc; i++){
@


1.2
log
@-
@
text
@d5 2
a6 3
  extern char **environ;
  for(int i = 0; i < argc; i++){
    if(environ[argc] == NULL){
d9 1
a9 1
    printf("%s", environ[agrc]);
@


1.1
log
@-
@
text
@d2 1
@
