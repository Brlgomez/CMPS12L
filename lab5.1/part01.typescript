Script started on Tue 18 Feb 2014 06:43:20 PM PST
[?1034hbash-1$ mk uninit.c
CSOURCE=uninit.c EXECBIN=uninit
+ cid + uninit.c
+ checksource uninit.c
+ gcc -g -O0 -Wall -Wextra -std=gnu99 uninit.c -o uninit -lm
uninit.c: In function â€˜mainâ€™:
uninit.c:6:15: warning: unused parameter â€˜argcâ€™ [-Wunused-parameter]
 int main (int argc, char **argv) {
               ^
uninit.c:6:28: warning: unused parameter â€˜argvâ€™ [-Wunused-parameter]
 int main (int argc, char **argv) {
                            ^
uninit.c:8:11: warning: â€˜pointerâ€™ is used uninitialized in this function [-Wuninitialized]
    printf ("pointer=%p\n", pointer);
           ^
uninit.c:11:11: warning: â€˜fooâ€™ is used uninitialized in this function [-Wuninitialized]
    printf ("foo=%d\n", foo);
           ^
+ set +x
============================================================
bash-2$ valgrind uninit
==28673== Memcheck, a memory error detector
==28673== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==28673== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==28673== Command: uninit
==28673== 
==28673== Conditional jump or move depends on uninitialised value(s)
==28673==    at 0x37F8E45948: vfprintf (vfprintf.c:1640)
==28673==    by 0x37F8E4F449: printf (printf.c:35)
==28673==    by 0x400544: main (uninit.c:8)
==28673== 
pointer=(nil)
==28673== Use of uninitialised value of size 8
==28673==    at 0x400549: main (uninit.c:9)
==28673== 
==28673== Invalid read of size 4
==28673==    at 0x400549: main (uninit.c:9)
==28673==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==28673== 
==28673== 
==28673== Process terminating with default action of signal 11 (SIGSEGV)
==28673==  Access not within mapped region at address 0x0
==28673==    at 0x400549: main (uninit.c:9)
==28673==  If you believe this happened as a result of a stack
==28673==  overflow in your program's main thread (unlikely but
==28673==  possible), you can try to increase the size of the
==28673==  main thread stack using the --main-stacksize= flag.
==28673==  The main thread stack size used in this run was 10485760.
==28673== 
==28673== HEAP SUMMARY:
==28673==     in use at exit: 0 bytes in 0 blocks
==28673==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==28673== 
==28673== All heap blocks were freed -- no leaks are possible
==28673== 
==28673== For counts of detected and suppressed errors, rerun with: -v
==28673== Use --track-origins=yes to see where uninitialised values come from
==28673== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 6 from 6)
Segmentation fault (core dumped)
bash-3$ echo $?
139
bash-4$ pstatus 139
pstatus: 0x008B TERMINATED 11: Segmentation fault (core dumped)
bash-5$ exit
exit

Script done on Tue 18 Feb 2014 06:44:22 PM PST
